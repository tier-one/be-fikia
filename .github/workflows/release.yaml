name: Build and Deploy
on:
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Set released tag in env vars
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    
    - name: Throw error when tag name is invalid
      if: ${{ !(contains(env.RELEASE_VERSION,'-staging')) && !(contains(env.RELEASE_VERSION,'-prod')) }}
      run: |
        exit "Invalid tag name. tag name should end with either -staging or -prod"

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ghcr.io/tier-one/be-fikia:${{ github.event.release.tag_name }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1

    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        touch $HOME/.kube/config
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

    - name: Print current context
      run: |
        kubectl config get-contexts
        echo "printing current context below"
        kubectl config current-context
        echo "setting do-sfo3-fikia-staging as context"
        kubectl config use-context do-sfo3-fikia-staging

    - name: Deploy to staging environmet
      if: contains(env.RELEASE_VERSION,'-staging')
      run: |
        cd devops/charts/fikia-bn
        helm -n apps upgrade -i fikia-bn --set --image.tag=${{ github.event.release.tag_name }} . -f values-staging.yaml

    - name: Deploy to prod environmet
      if: contains(env.RELEASE_VERSION,'-prod')
      run: |
        cd devops/charts/fikia-bn
        helm -n apps upgrade -i fikia-bn --set --image.tag=${{ github.event.release.tag_name }} . -f values-prod.yaml
  
