replicaCount: 1

image:
  repository: ghcr.io/tier-one/be-fikia
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.1.1"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: "github-pull-secret"

nameOverride: ""
fullnameOverride: "fikia-api"

# Reference secretName that holds all the app environments
env_vars_secret_name: "api-staging"
  
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 3000

ingress:
  enabled: false
  className: "kong"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dev
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api-staging.fikia.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: wildcard-dev-fikia-com-tls
     hosts:
       - "*.staging.fikia.io"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

nodeSelector: {}

tolerations: []

affinity: {}

newrelicFile: 
